[
  {
    "jsonApiType": "session",
    "endpoints": [
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "create",
        "urlTemplate": "/sessions",
        "method": "POST",
        "comment": "Create a new session",
        "urlPlaceholders": [],
        "requestBodyType": "SessionCreateSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "*",
          "attributes": "*",
          "relationships": "*"
        },
        "queryParamsRequired": false,
        "responseType": "SessionCreateTargetSchema",
        "rawName": "rawCreate"
      }
    ],
    "namespace": "session",
    "resourceClassName": "Session"
  },
  {
    "jsonApiType": "account",
    "endpoints": [
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "create",
        "urlTemplate": "/account",
        "method": "POST",
        "comment": "Create a new account",
        "urlPlaceholders": [],
        "requestBodyType": "AccountCreateSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "account",
          "attributes": [
            "email",
            "first_name",
            "last_name",
            "company",
            "password",
            "signup_to_newsletter",
            "role_description",
            "role_context",
            "acquisition_method",
            "latest_acquisition_method"
          ],
          "relationships": []
        },
        "queryParamsRequired": false,
        "responseType": "AccountCreateTargetSchema",
        "name": "create",
        "rawName": "rawCreate"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "update",
        "urlTemplate": "/account",
        "method": "PUT",
        "comment": "Update a account",
        "urlPlaceholders": [],
        "requestBodyType": "AccountUpdateSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "account",
          "idRequired": true,
          "attributes": [
            "email",
            "first_name",
            "last_name",
            "company",
            "password",
            "current_password",
            "otp_code"
          ],
          "relationships": ["default_organization"]
        },
        "queryParamsRequired": false,
        "responseType": "AccountUpdateTargetSchema",
        "name": "update",
        "rawName": "rawUpdate"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "destroy",
        "urlTemplate": "/account/destroy",
        "method": "POST",
        "comment": "Delete a account",
        "urlPlaceholders": [],
        "requestBodyType": "AccountDestroySchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "account_destroy_request",
          "attributes": ["otp_code", "password"],
          "relationships": []
        },
        "queryParamsRequired": false,
        "responseType": "AccountDestroyJobSchema",
        "name": "destroy",
        "rawName": "rawDestroy"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "self",
        "urlTemplate": "/account",
        "method": "GET",
        "comment": "Retrieve a account",
        "urlPlaceholders": [],
        "optionalRequestBody": false,
        "queryParamsType": "AccountSelfHrefSchema",
        "queryParamsRequired": false,
        "responseType": "AccountSelfTargetSchema",
        "name": "find",
        "rawName": "rawFind"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "reset_password",
        "urlTemplate": "/account/reset_password",
        "method": "POST",
        "comment": "Request a password reset",
        "urlPlaceholders": [],
        "requestBodyType": "AccountResetPasswordSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "account",
          "attributes": ["email"],
          "relationships": []
        },
        "queryParamsRequired": false,
        "name": "resetPassword",
        "rawName": "rawResetPassword"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "activate_2fa",
        "urlTemplate": "/account/activate-2fa",
        "method": "PUT",
        "comment": "Activates 2-factor authorization",
        "urlPlaceholders": [],
        "requestBodyType": "AccountActivate_2FaSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "2fa_activation",
          "attributes": ["otp_code", "password"],
          "relationships": []
        },
        "queryParamsRequired": false,
        "responseType": "AccountActivate_2FaTargetSchema",
        "name": "activate_2Fa",
        "rawName": "rawActivate_2Fa"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "reset_2fa",
        "urlTemplate": "/account/reset-2fa",
        "method": "PUT",
        "comment": "Generates 2-factor authorization secrets",
        "urlPlaceholders": [],
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "AccountReset_2FaTargetSchema",
        "name": "reset_2Fa",
        "rawName": "rawReset_2Fa"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "deactivate_2fa",
        "urlTemplate": "/account/deactivate-2fa",
        "method": "PUT",
        "comment": "De-activates 2-factor authorization",
        "urlPlaceholders": [],
        "requestBodyType": "AccountDeactivate_2FaSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "2fa_deactivation",
          "attributes": ["otp_code", "password"],
          "relationships": []
        },
        "queryParamsRequired": false,
        "responseType": "AccountDeactivate_2FaTargetSchema",
        "name": "deactivate_2Fa",
        "rawName": "rawDeactivate_2Fa"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "convert_to_organization",
        "urlTemplate": "/account/convert-to-organization",
        "method": "POST",
        "comment": "Convert to organization",
        "urlPlaceholders": [],
        "requestBodyType": "AccountConvertToOrganizationSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "organization",
          "attributes": ["name"],
          "relationships": []
        },
        "queryParamsRequired": false,
        "responseType": "AccountConvertToOrganizationJobSchema",
        "name": "convertToOrganization",
        "rawName": "rawConvertToOrganization"
      }
    ],
    "namespace": "account",
    "resourceClassName": "Account"
  },
  {
    "jsonApiType": "site",
    "endpoints": [
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "self",
        "urlTemplate": "/sites/${siteId}",
        "method": "GET",
        "comment": "Retrieve a project",
        "urlPlaceholders": [
          {
            "variableName": "siteId",
            "isEntityId": true,
            "relType": "SiteData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "siteId",
          "isEntityId": true,
          "relType": "SiteData"
        },
        "optionalRequestBody": false,
        "queryParamsType": "SiteSelfHrefSchema",
        "queryParamsRequired": false,
        "responseType": "SiteSelfTargetSchema",
        "name": "find",
        "rawName": "rawFind"
      },
      {
        "returnsCollection": true,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "instances",
        "urlTemplate": "/sites",
        "method": "GET",
        "comment": "List all projects",
        "urlPlaceholders": [],
        "optionalRequestBody": false,
        "queryParamsType": "SiteInstancesHrefSchema",
        "queryParamsRequired": false,
        "responseType": "SiteInstancesTargetSchema",
        "paginatedResponse": {
          "defaultLimit": 20,
          "maxLimit": 50
        },
        "name": "list",
        "rawName": "rawList"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "create",
        "urlTemplate": "/sites",
        "method": "POST",
        "comment": "Create a new project",
        "urlPlaceholders": [],
        "requestBodyType": "SiteCreateSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "site",
          "attributes": [
            "name",
            "internal_subdomain",
            "main_locale",
            "theme_hue",
            "template"
          ],
          "relationships": []
        },
        "queryParamsType": "SiteCreateHrefSchema",
        "queryParamsRequired": false,
        "responseType": "SiteCreateJobSchema",
        "name": "create",
        "rawName": "rawCreate"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "update",
        "urlTemplate": "/sites/${siteId}",
        "method": "PUT",
        "comment": "Update project",
        "urlPlaceholders": [
          {
            "variableName": "siteId",
            "isEntityId": true,
            "relType": "SiteData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "siteId",
          "isEntityId": true,
          "relType": "SiteData"
        },
        "requestBodyType": "SiteUpdateSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "site",
          "idRequired": true,
          "attributes": [
            "name",
            "domain",
            "internal_subdomain",
            "is_public_template"
          ],
          "relationships": []
        },
        "queryParamsRequired": false,
        "responseType": "SiteUpdateTargetSchema",
        "name": "update",
        "rawName": "rawUpdate"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "destroy",
        "urlTemplate": "/sites/${siteId}",
        "method": "DELETE",
        "comment": "Delete a project",
        "urlPlaceholders": [
          {
            "variableName": "siteId",
            "isEntityId": true,
            "relType": "SiteData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "siteId",
          "isEntityId": true,
          "relType": "SiteData"
        },
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "SiteDestroyJobSchema",
        "name": "destroy",
        "rawName": "rawDestroy"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "duplicate",
        "urlTemplate": "/sites/${siteId}/duplicate",
        "method": "POST",
        "comment": "Duplicate an existing project",
        "urlPlaceholders": [
          {
            "variableName": "siteId",
            "isEntityId": true,
            "relType": "SiteData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "siteId",
          "isEntityId": true,
          "relType": "SiteData"
        },
        "requestBodyType": "SiteDuplicateSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "site",
          "attributes": [
            "name",
            "ignore_content",
            "payment_intent_id",
            "recurrence",
            "extra_packets",
            "billing_profile"
          ],
          "relationships": ["plan", "billing_profile"]
        },
        "queryParamsType": "SiteDuplicateHrefSchema",
        "queryParamsRequired": false,
        "responseType": "SiteDuplicateJobSchema",
        "rawName": "rawDuplicate"
      }
    ],
    "namespace": "sites",
    "resourceClassName": "Site"
  },
  {
    "jsonApiType": "site_subscription",
    "endpoints": [
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "create",
        "urlTemplate": "/sites/${siteId}/subscriptions",
        "method": "POST",
        "comment": "Create a new subscription",
        "urlPlaceholders": [
          {
            "variableName": "siteId",
            "isEntityId": false,
            "relType": "SiteData"
          }
        ],
        "requestBodyType": "SiteSubscriptionCreateSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "site_subscription",
          "attributes": [
            "payment_intent_id",
            "recurrence",
            "extra_packets",
            "billing_profile"
          ],
          "relationships": ["plan", "billing_profile"]
        },
        "queryParamsRequired": false,
        "responseType": "SiteSubscriptionCreateTargetSchema",
        "rawName": "rawCreate"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "simulate",
        "urlTemplate": "/sites/${siteId}/subscriptions/simulate",
        "method": "POST",
        "comment": "Simulate",
        "urlPlaceholders": [
          {
            "variableName": "siteId",
            "isEntityId": false,
            "relType": "SiteData"
          }
        ],
        "requestBodyType": "SiteSubscriptionSimulateSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "site_subscription",
          "attributes": [
            "recurrence",
            "extra_packets",
            "is_duplicate",
            "ignore_content",
            "billing_profile"
          ],
          "relationships": ["plan", "billing_profile"]
        },
        "queryParamsRequired": false,
        "responseType": "SiteSubscriptionSimulateTargetSchema",
        "rawName": "rawSimulate"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "validate",
        "urlTemplate": "/sites/${siteId}/subscriptions/validate",
        "method": "POST",
        "comment": "Validate a new subscription",
        "urlPlaceholders": [
          {
            "variableName": "siteId",
            "isEntityId": false,
            "relType": "SiteData"
          }
        ],
        "requestBodyType": "SiteSubscriptionValidateSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "site_subscription",
          "attributes": ["extra_packets", "ignore_content", "is_duplicate"],
          "relationships": ["plan"]
        },
        "queryParamsRequired": false,
        "responseType": "SiteSubscriptionValidateTargetSchema",
        "name": "validate",
        "rawName": "rawValidate"
      }
    ],
    "namespace": "siteSubscription",
    "resourceClassName": "SiteSubscription"
  },
  {
    "jsonApiType": "per_owner_pricing_subscription",
    "endpoints": [
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "create",
        "urlTemplate": "/per-owner-pricing-subscriptions",
        "method": "POST",
        "comment": "Create a new subscription",
        "urlPlaceholders": [],
        "requestBodyType": "PerOwnerPricingSubscriptionCreateSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "per_owner_pricing_subscription",
          "attributes": [
            "payment_intent_id",
            "recurrence",
            "billing_profile",
            "downgrade_reason"
          ],
          "relationships": ["plan"]
        },
        "queryParamsRequired": false,
        "responseType": "PerOwnerPricingSubscriptionCreateTargetSchema",
        "name": "create",
        "rawName": "rawCreate"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "simulate",
        "urlTemplate": "/per-owner-pricing-subscriptions/simulate",
        "method": "POST",
        "comment": "Simulate",
        "urlPlaceholders": [],
        "requestBodyType": "PerOwnerPricingSubscriptionSimulateSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "per_owner_pricing_subscription",
          "attributes": ["recurrence", "billing_profile"],
          "relationships": ["plan"]
        },
        "queryParamsRequired": false,
        "responseType": "PerOwnerPricingSubscriptionSimulateTargetSchema",
        "name": "simulate",
        "rawName": "rawSimulate"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "validate",
        "urlTemplate": "/per-owner-pricing-subscriptions/validate",
        "method": "POST",
        "comment": "Validate a new subscription",
        "urlPlaceholders": [],
        "requestBodyType": "PerOwnerPricingSubscriptionValidateSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "per_owner_pricing_subscription",
          "attributes": [],
          "relationships": ["plan"]
        },
        "queryParamsRequired": false,
        "responseType": "PerOwnerPricingSubscriptionValidateTargetSchema",
        "name": "validate",
        "rawName": "rawValidate"
      }
    ],
    "namespace": "perOwnerPricingSubscription",
    "resourceClassName": "PerOwnerPricingSubscription"
  },
  {
    "jsonApiType": "site_plan",
    "endpoints": [
      {
        "returnsCollection": true,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "instances",
        "urlTemplate": "/site-plans",
        "method": "GET",
        "comment": "Retrieve enabled plans for account",
        "urlPlaceholders": [],
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "SitePlanInstancesTargetSchema",
        "name": "list",
        "rawName": "rawList"
      }
    ],
    "namespace": "sitePlans",
    "resourceClassName": "SitePlan"
  },
  {
    "jsonApiType": "per_owner_pricing_plan",
    "endpoints": [
      {
        "returnsCollection": true,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "instances",
        "urlTemplate": "/per-owner-pricing-plans",
        "method": "GET",
        "comment": "Retrieve enabled plans for account",
        "urlPlaceholders": [],
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "PerOwnerPricingPlanInstancesTargetSchema",
        "name": "list",
        "rawName": "rawList"
      },
      {
        "returnsCollection": true,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "activable_as_appointed_organization_instances",
        "urlTemplate": "/per-owner-pricing-plans/activable-as-appointed-organization",
        "method": "GET",
        "comment": "Retrieve plans that the organization can enable on other organizations given a mandate",
        "urlPlaceholders": [],
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "PerOwnerPricingPlanActivableAsAppointedOrganizationInstancesTargetSchema",
        "name": "activableAsAppointedOrganizationList",
        "rawName": "rawActivableAsAppointedOrganizationList"
      }
    ],
    "namespace": "perOwnerPricingPlans",
    "resourceClassName": "PerOwnerPricingPlan"
  },
  {
    "jsonApiType": "per_site_pricing_billing_profile",
    "endpoints": [
      {
        "returnsCollection": true,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "instances",
        "urlTemplate": "/per-site-pricing-billing-profiles",
        "method": "GET",
        "comment": "Retrieve all account's billing profiles",
        "urlPlaceholders": [],
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "PerSitePricingBillingProfileInstancesTargetSchema",
        "name": "list",
        "rawName": "rawList"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "self",
        "urlTemplate": "/per-site-pricing-billing-profiles/${perSitePricingBillingProfileId}",
        "method": "GET",
        "comment": "Retrieve a billing profile",
        "urlPlaceholders": [
          {
            "variableName": "perSitePricingBillingProfileId",
            "isEntityId": true,
            "relType": "PerSitePricingBillingProfileData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "perSitePricingBillingProfileId",
          "isEntityId": true,
          "relType": "PerSitePricingBillingProfileData"
        },
        "optionalRequestBody": false,
        "queryParamsType": "PerSitePricingBillingProfileSelfHrefSchema",
        "queryParamsRequired": false,
        "responseType": "PerSitePricingBillingProfileSelfTargetSchema",
        "name": "find",
        "rawName": "rawFind"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "update_credit_card",
        "urlTemplate": "/per-site-pricing-billing-profiles/${perSitePricingBillingProfileId}/credit-card",
        "method": "PUT",
        "comment": "Update a billing profile's credit card",
        "urlPlaceholders": [
          {
            "variableName": "perSitePricingBillingProfileId",
            "isEntityId": true,
            "relType": "PerSitePricingBillingProfileData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "perSitePricingBillingProfileId",
          "isEntityId": true,
          "relType": "PerSitePricingBillingProfileData"
        },
        "requestBodyType": "PerSitePricingBillingProfileUpdateCreditCardSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "card",
          "attributes": ["payment_intent_id"],
          "relationships": []
        },
        "queryParamsRequired": false,
        "responseType": "PerSitePricingBillingProfileUpdateCreditCardTargetSchema",
        "name": "updateCreditCard",
        "rawName": "rawUpdateCreditCard"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "update_info",
        "urlTemplate": "/per-site-pricing-billing-profiles/${perSitePricingBillingProfileId}/info",
        "method": "PUT",
        "comment": "Update a billing profile's billing information",
        "urlPlaceholders": [
          {
            "variableName": "perSitePricingBillingProfileId",
            "isEntityId": true,
            "relType": "PerSitePricingBillingProfileData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "perSitePricingBillingProfileId",
          "isEntityId": true,
          "relType": "PerSitePricingBillingProfileData"
        },
        "requestBodyType": "PerSitePricingBillingProfileUpdateInfoSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "per_site_pricing_billing_profile",
          "attributes": ["billing_profile"],
          "relationships": []
        },
        "queryParamsRequired": false,
        "responseType": "PerSitePricingBillingProfileUpdateInfoTargetSchema",
        "name": "updateInfo",
        "rawName": "rawUpdateInfo"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "destroy",
        "urlTemplate": "/per-site-pricing-billing-profiles/${perSitePricingBillingProfileId}",
        "method": "DELETE",
        "comment": "Delete a billing profile",
        "urlPlaceholders": [
          {
            "variableName": "perSitePricingBillingProfileId",
            "isEntityId": true,
            "relType": "PerSitePricingBillingProfileData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "perSitePricingBillingProfileId",
          "isEntityId": true,
          "relType": "PerSitePricingBillingProfileData"
        },
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "PerSitePricingBillingProfileDestroyTargetSchema",
        "name": "destroy",
        "rawName": "rawDestroy"
      }
    ],
    "namespace": "perSitePricingBillingProfiles",
    "resourceClassName": "PerSitePricingBillingProfile"
  },
  {
    "jsonApiType": "per_owner_pricing_billing_profile",
    "endpoints": [
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "self",
        "urlTemplate": "/per-owner-pricing-billing-profile",
        "method": "GET",
        "comment": "Retrieve a billing profile",
        "urlPlaceholders": [],
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "PerOwnerPricingBillingProfileSelfTargetSchema",
        "name": "find",
        "rawName": "rawFind"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "update_credit_card",
        "urlTemplate": "/per-owner-pricing-billing-profile/credit-card",
        "method": "PUT",
        "comment": "Update a billing profile's credit card",
        "urlPlaceholders": [],
        "requestBodyType": "PerOwnerPricingBillingProfileUpdateCreditCardSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "card",
          "attributes": ["payment_intent_id"],
          "relationships": []
        },
        "queryParamsRequired": false,
        "responseType": "PerOwnerPricingBillingProfileUpdateCreditCardTargetSchema",
        "name": "updateCreditCard",
        "rawName": "rawUpdateCreditCard"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "update_info",
        "urlTemplate": "/per-owner-pricing-billing-profile/info",
        "method": "PUT",
        "comment": "Update a billing profile's billing information",
        "urlPlaceholders": [],
        "requestBodyType": "PerOwnerPricingBillingProfileUpdateInfoSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "per_owner_pricing_billing_profile",
          "attributes": ["billing_profile"],
          "relationships": []
        },
        "queryParamsRequired": false,
        "responseType": "PerOwnerPricingBillingProfileUpdateInfoTargetSchema",
        "name": "updateInfo",
        "rawName": "rawUpdateInfo"
      }
    ],
    "namespace": "perOwnerPricingBillingProfile",
    "resourceClassName": "PerOwnerPricingBillingProfile"
  },
  {
    "jsonApiType": "invoice",
    "endpoints": [
      {
        "returnsCollection": true,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "per_owner_pricing_billing_profile_instances",
        "urlTemplate": "/per-owner-pricing-billing-profile/invoices",
        "method": "GET",
        "comment": "Retrieve all invoices",
        "urlPlaceholders": [],
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "InvoicePerOwnerPricingBillingProfileInstancesTargetSchema",
        "name": "perOwnerPricingBillingProfileList",
        "rawName": "rawPerOwnerPricingBillingProfileList"
      },
      {
        "returnsCollection": true,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "per_site_pricing_billing_profile_instances",
        "urlTemplate": "/per-site-pricing-billing-profiles/${perSitePricingBillingProfileId}/invoices",
        "method": "GET",
        "comment": "Retrieve all invoices",
        "urlPlaceholders": [
          {
            "variableName": "perSitePricingBillingProfileId",
            "isEntityId": false,
            "relType": "PerSitePricingBillingProfileData"
          }
        ],
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "InvoicePerSitePricingBillingProfileInstancesTargetSchema",
        "name": "perSitePricingBillingProfileList",
        "rawName": "rawPerSitePricingBillingProfileList"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "per_owner_pricing_billing_profile_collect_unpaid",
        "urlTemplate": "/per-owner-pricing-billing-profile/invoices/collect-unpaid",
        "method": "POST",
        "comment": "Collect all unpaid invoices",
        "urlPlaceholders": [],
        "requestBodyType": "InvoicePerOwnerPricingBillingProfileCollectUnpaidSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "invoice_collection",
          "attributes": ["payment_intent_id"],
          "relationships": []
        },
        "queryParamsRequired": false,
        "responseType": "InvoicePerOwnerPricingBillingProfileCollectUnpaidTargetSchema",
        "name": "perOwnerPricingBillingProfileCollectUnpaid",
        "rawName": "rawPerOwnerPricingBillingProfileCollectUnpaid"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "per_site_pricing_billing_profile_collect_unpaid",
        "urlTemplate": "/per-site-pricing-billing-profiles/${perSitePricingBillingProfileId}/invoices/collect-unpaid",
        "method": "POST",
        "comment": "Collect all unpaid invoices",
        "urlPlaceholders": [
          {
            "variableName": "perSitePricingBillingProfileId",
            "isEntityId": false,
            "relType": "PerSitePricingBillingProfileData"
          }
        ],
        "requestBodyType": "InvoicePerSitePricingBillingProfileCollectUnpaidSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "invoice_collection",
          "attributes": ["payment_intent_id"],
          "relationships": []
        },
        "queryParamsRequired": false,
        "responseType": "InvoicePerSitePricingBillingProfileCollectUnpaidTargetSchema",
        "name": "perSitePricingBillingProfileCollectUnpaid",
        "rawName": "rawPerSitePricingBillingProfileCollectUnpaid"
      }
    ],
    "namespace": "invoices",
    "resourceClassName": "Invoice"
  },
  {
    "jsonApiType": "resource_usage",
    "endpoints": [
      {
        "returnsCollection": true,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "instances",
        "urlTemplate": "/resource-usages",
        "method": "GET",
        "comment": "Retrieve all resource usages",
        "urlPlaceholders": [],
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "ResourceUsageInstancesTargetSchema",
        "name": "list",
        "rawName": "rawList"
      }
    ],
    "namespace": "resourceUsages",
    "resourceClassName": "ResourceUsage"
  },
  {
    "jsonApiType": "daily_usage",
    "endpoints": [
      {
        "returnsCollection": true,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "instances",
        "urlTemplate": "/daily-site-usages",
        "method": "GET",
        "comment": "Retrieve daily usage info for either an account or an organization",
        "urlPlaceholders": [],
        "optionalRequestBody": false,
        "queryParamsType": "DailyUsageInstancesHrefSchema",
        "queryParamsRequired": false,
        "responseType": "DailyUsageInstancesTargetSchema",
        "name": "list",
        "rawName": "rawList"
      }
    ],
    "namespace": "dailyUsages",
    "resourceClassName": "DailyUsage"
  },
  {
    "jsonApiType": "job_result",
    "endpoints": [
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "self",
        "urlTemplate": "/job-results/${jobResultId}",
        "method": "GET",
        "comment": "Retrieve a job result",
        "urlPlaceholders": [
          {
            "variableName": "jobResultId",
            "isEntityId": true,
            "relType": "JobResultData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "jobResultId",
          "isEntityId": true,
          "relType": "JobResultData"
        },
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "JobResultSelfTargetSchema",
        "name": "find",
        "rawName": "rawFind"
      }
    ],
    "namespace": "jobResults",
    "resourceClassName": "JobResult"
  },
  {
    "jsonApiType": "site_transfer",
    "endpoints": [
      {
        "returnsCollection": true,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "instances",
        "urlTemplate": "/site-transfers",
        "method": "GET",
        "comment": "List all pending transfer requests",
        "urlPlaceholders": [],
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "SiteTransferInstancesTargetSchema",
        "name": "list",
        "rawName": "rawList"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "self",
        "urlTemplate": "/site-transfers/${siteTransferId}",
        "method": "GET",
        "comment": "Retrieve a transfer",
        "urlPlaceholders": [
          {
            "variableName": "siteTransferId",
            "isEntityId": true,
            "relType": "SiteTransferData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "siteTransferId",
          "isEntityId": true,
          "relType": "SiteTransferData"
        },
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "SiteTransferSelfTargetSchema",
        "name": "find",
        "rawName": "rawFind"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "create",
        "urlTemplate": "/sites/${siteId}/transfer",
        "method": "POST",
        "comment": "Create a new site transfer request",
        "urlPlaceholders": [
          {
            "variableName": "siteId",
            "isEntityId": false,
            "relType": "SiteData"
          }
        ],
        "requestBodyType": "SiteTransferCreateSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "site_transfer",
          "attributes": ["destination"],
          "relationships": []
        },
        "queryParamsRequired": false,
        "responseType": "SiteTransferCreateTargetSchema",
        "name": "create",
        "rawName": "rawCreate"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "destroy",
        "urlTemplate": "/sites/${siteId}/transfer",
        "method": "DELETE",
        "comment": "Destroy a site transfer request",
        "urlPlaceholders": [
          {
            "variableName": "siteId",
            "isEntityId": false,
            "relType": "SiteData"
          }
        ],
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "SiteTransferDestroyTargetSchema",
        "name": "destroy",
        "rawName": "rawDestroy"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "simulate_accept",
        "urlTemplate": "/site-transfers/${siteTransferId}/simulate-accept",
        "method": "PUT",
        "comment": "Simulate accept",
        "urlPlaceholders": [
          {
            "variableName": "siteTransferId",
            "isEntityId": true,
            "relType": "SiteTransferData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "siteTransferId",
          "isEntityId": true,
          "relType": "SiteTransferData"
        },
        "requestBodyType": "SiteTransferSimulateAcceptSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "site_transfer",
          "idRequired": true,
          "attributes": ["billing_profile"],
          "relationships": ["billing_profile"]
        },
        "queryParamsRequired": false,
        "responseType": "SiteTransferSimulateAcceptTargetSchema",
        "rawName": "rawSimulateAccept"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "accept",
        "urlTemplate": "/site-transfers/${siteTransferId}/accept",
        "method": "PUT",
        "comment": "Accept a site transfer request",
        "urlPlaceholders": [
          {
            "variableName": "siteTransferId",
            "isEntityId": true,
            "relType": "SiteTransferData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "siteTransferId",
          "isEntityId": true,
          "relType": "SiteTransferData"
        },
        "requestBodyType": "SiteTransferAcceptSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "site_transfer",
          "idRequired": true,
          "attributes": ["payment_intent_id", "billing_profile"],
          "relationships": ["billing_profile"]
        },
        "queryParamsRequired": false,
        "responseType": "SiteTransferAcceptTargetSchema",
        "rawName": "rawAccept"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "decline",
        "urlTemplate": "/site-transfers/${siteTransferId}/decline",
        "method": "PUT",
        "comment": "Decline a site transfer request",
        "urlPlaceholders": [
          {
            "variableName": "siteTransferId",
            "isEntityId": true,
            "relType": "SiteTransferData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "siteTransferId",
          "isEntityId": true,
          "relType": "SiteTransferData"
        },
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "name": "decline",
        "rawName": "rawDecline"
      }
    ],
    "namespace": "siteTransfers",
    "resourceClassName": "SiteTransfer"
  },
  {
    "jsonApiType": "site_invitation",
    "endpoints": [
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "redeem",
        "urlTemplate": "/site-invitations/${siteInvitationId}/redeem",
        "method": "PUT",
        "comment": "Redeem token",
        "urlPlaceholders": [
          {
            "variableName": "siteInvitationId",
            "isEntityId": true,
            "relType": "SiteInvitationData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "siteInvitationId",
          "isEntityId": true,
          "relType": "SiteInvitationData"
        },
        "optionalRequestBody": false,
        "queryParamsType": "SiteInvitationRedeemHrefSchema",
        "queryParamsRequired": false,
        "responseType": "SiteInvitationRedeemTargetSchema",
        "name": "redeem",
        "rawName": "rawRedeem"
      }
    ],
    "namespace": "siteInvitation",
    "resourceClassName": "SiteInvitation"
  },
  {
    "jsonApiType": "subscription_limit",
    "endpoints": [
      {
        "returnsCollection": true,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "instances",
        "urlTemplate": "/sites/${siteId}/subscription-limits",
        "method": "GET",
        "comment": "Get all the subscription limits",
        "urlPlaceholders": [
          {
            "variableName": "siteId",
            "isEntityId": false,
            "relType": "SiteData"
          }
        ],
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "SubscriptionLimitInstancesTargetSchema",
        "name": "list",
        "rawName": "rawList"
      }
    ],
    "namespace": "subscriptionLimits",
    "resourceClassName": "SubscriptionLimit"
  },
  {
    "jsonApiType": "subscription_feature",
    "endpoints": [
      {
        "returnsCollection": true,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "instances",
        "urlTemplate": "/sites/${siteId}/subscription-features",
        "method": "GET",
        "comment": "Get all the subscription features",
        "urlPlaceholders": [
          {
            "variableName": "siteId",
            "isEntityId": false,
            "relType": "SiteData"
          }
        ],
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "SubscriptionFeatureInstancesTargetSchema",
        "name": "list",
        "rawName": "rawList"
      }
    ],
    "namespace": "subscriptionFeatures",
    "resourceClassName": "SubscriptionFeature"
  },
  {
    "jsonApiType": "oauth_application",
    "endpoints": [
      {
        "returnsCollection": true,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "instances",
        "urlTemplate": "/oauth_applications",
        "method": "GET",
        "comment": "List all authorized applications",
        "urlPlaceholders": [],
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "OauthApplicationInstancesTargetSchema",
        "name": "list",
        "rawName": "rawList"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "destroy",
        "urlTemplate": "/oauth_applications/${oauthApplicationId}",
        "method": "DELETE",
        "comment": "Delete an authorized application",
        "urlPlaceholders": [
          {
            "variableName": "oauthApplicationId",
            "isEntityId": true,
            "relType": "OauthApplicationData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "oauthApplicationId",
          "isEntityId": true,
          "relType": "OauthApplicationData"
        },
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "name": "destroy",
        "rawName": "rawDestroy"
      }
    ],
    "namespace": "oauthApplications",
    "resourceClassName": "OauthApplication"
  },
  {
    "jsonApiType": "payment_intent",
    "endpoints": [
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "create_from_payment_method",
        "urlTemplate": "/payment-methods/${paymentMethodId}/payment-intents",
        "method": "POST",
        "comment": "Create a payment intent starting from a payment method",
        "urlPlaceholders": [
          {
            "variableName": "paymentMethodId",
            "isEntityId": false,
            "relType": "PaymentMethodData"
          }
        ],
        "requestBodyType": "PaymentIntentCreateFromPaymentMethodSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "payment_intent",
          "attributes": ["amount"],
          "relationships": []
        },
        "queryParamsRequired": false,
        "responseType": "PaymentIntentCreateFromPaymentMethodTargetSchema",
        "deprecated": "This API call is to be considered private and might change without notice",
        "name": "createFromPaymentMethod",
        "rawName": "rawCreateFromPaymentMethod"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "create_for_per_site_pricing_billing_profile",
        "urlTemplate": "/per-site-pricing-billing-profiles/${perSitePricingBillingProfileId}/payment-intents",
        "method": "POST",
        "comment": "Create a payment intent starting from an existing per-site billing profile",
        "urlPlaceholders": [
          {
            "variableName": "perSitePricingBillingProfileId",
            "isEntityId": false,
            "relType": "PerSitePricingBillingProfileData"
          }
        ],
        "requestBodyType": "PaymentIntentCreateForPerSitePricingBillingProfileSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "payment_intent",
          "attributes": ["amount"],
          "relationships": []
        },
        "queryParamsRequired": false,
        "responseType": "PaymentIntentCreateForPerSitePricingBillingProfileTargetSchema",
        "deprecated": "This API call is to be considered private and might change without notice",
        "name": "createForPerSitePricingBillingProfile",
        "rawName": "rawCreateForPerSitePricingBillingProfile"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "create_for_per_owner_pricing_billing_profile",
        "urlTemplate": "/per-owner-pricing-billing-profile/payment-intents",
        "method": "POST",
        "comment": "Create a payment intent starting from an existing per-owner billing profile",
        "urlPlaceholders": [],
        "requestBodyType": "PaymentIntentCreateForPerOwnerPricingBillingProfileSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "payment_intent",
          "attributes": ["amount"],
          "relationships": []
        },
        "queryParamsRequired": false,
        "responseType": "PaymentIntentCreateForPerOwnerPricingBillingProfileTargetSchema",
        "deprecated": "This API call is to be considered private and might change without notice",
        "name": "createForPerOwnerPricingBillingProfile",
        "rawName": "rawCreateForPerOwnerPricingBillingProfile"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "confirm",
        "urlTemplate": "/payment-intents/${paymentIntentId}/confirm",
        "method": "PUT",
        "comment": "Confirm a payment intent",
        "urlPlaceholders": [
          {
            "variableName": "paymentIntentId",
            "isEntityId": true,
            "relType": "PaymentIntentData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "paymentIntentId",
          "isEntityId": true,
          "relType": "PaymentIntentData"
        },
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "PaymentIntentConfirmTargetSchema",
        "deprecated": "This API call is to be considered private and might change without notice",
        "name": "confirm",
        "rawName": "rawConfirm"
      }
    ],
    "namespace": "paymentIntent",
    "resourceClassName": "PaymentIntent"
  },
  {
    "jsonApiType": "organization",
    "endpoints": [
      {
        "returnsCollection": true,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "instances",
        "urlTemplate": "/organizations",
        "method": "GET",
        "comment": "List organizations",
        "urlPlaceholders": [],
        "optionalRequestBody": false,
        "queryParamsType": "OrganizationInstancesHrefSchema",
        "queryParamsRequired": false,
        "responseType": "OrganizationInstancesTargetSchema",
        "name": "list",
        "rawName": "rawList"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "self",
        "urlTemplate": "/organizations/${organizationId}",
        "method": "GET",
        "comment": "Retrieve an organization",
        "urlPlaceholders": [
          {
            "variableName": "organizationId",
            "isEntityId": true,
            "relType": "OrganizationData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "organizationId",
          "isEntityId": true,
          "relType": "OrganizationData"
        },
        "optionalRequestBody": false,
        "queryParamsType": "OrganizationSelfHrefSchema",
        "queryParamsRequired": false,
        "responseType": "OrganizationSelfTargetSchema",
        "name": "find",
        "rawName": "rawFind"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "create",
        "urlTemplate": "/organizations",
        "method": "POST",
        "comment": "Create a new organization",
        "urlPlaceholders": [],
        "requestBodyType": "OrganizationCreateSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "organization",
          "attributes": ["name"],
          "relationships": []
        },
        "queryParamsRequired": false,
        "responseType": "OrganizationCreateTargetSchema",
        "name": "create",
        "rawName": "rawCreate"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "update",
        "urlTemplate": "/organizations/${organizationId}",
        "method": "PUT",
        "comment": "Update an organization",
        "urlPlaceholders": [
          {
            "variableName": "organizationId",
            "isEntityId": true,
            "relType": "OrganizationData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "organizationId",
          "isEntityId": true,
          "relType": "OrganizationData"
        },
        "requestBodyType": "OrganizationUpdateSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "organization",
          "idRequired": true,
          "attributes": ["name"],
          "relationships": []
        },
        "queryParamsRequired": false,
        "responseType": "OrganizationUpdateTargetSchema",
        "name": "update",
        "rawName": "rawUpdate"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "destroy",
        "urlTemplate": "/organizations/${organizationId}/destroy",
        "method": "POST",
        "comment": "Destroy an organization",
        "urlPlaceholders": [
          {
            "variableName": "organizationId",
            "isEntityId": true,
            "relType": "OrganizationData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "organizationId",
          "isEntityId": true,
          "relType": "OrganizationData"
        },
        "requestBodyType": "OrganizationDestroySchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "organization_destroy_request",
          "attributes": ["otp_code", "password"],
          "relationships": []
        },
        "queryParamsRequired": false,
        "responseType": "OrganizationDestroyJobSchema",
        "name": "destroy",
        "rawName": "rawDestroy"
      }
    ],
    "namespace": "organizations",
    "resourceClassName": "Organization"
  },
  {
    "jsonApiType": "organization_role",
    "endpoints": [
      {
        "returnsCollection": true,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "instances",
        "urlTemplate": "/organization-roles",
        "method": "GET",
        "comment": "List organization roles",
        "urlPlaceholders": [],
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "OrganizationRoleInstancesTargetSchema",
        "name": "list",
        "rawName": "rawList"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "self",
        "urlTemplate": "/organization-roles/${organizationRoleId}",
        "method": "GET",
        "comment": "Retrieve an organization role",
        "urlPlaceholders": [
          {
            "variableName": "organizationRoleId",
            "isEntityId": true,
            "relType": "OrganizationRoleData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "organizationRoleId",
          "isEntityId": true,
          "relType": "OrganizationRoleData"
        },
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "OrganizationRoleSelfTargetSchema",
        "name": "find",
        "rawName": "rawFind"
      }
    ],
    "namespace": "organizationRoles",
    "resourceClassName": "OrganizationRole"
  },
  {
    "jsonApiType": "organization_invitation",
    "endpoints": [
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "create",
        "urlTemplate": "/organization-invitations",
        "method": "POST",
        "comment": "Invite a new member",
        "urlPlaceholders": [],
        "requestBodyType": "OrganizationInvitationCreateSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "organization_invitation",
          "attributes": ["email"],
          "relationships": ["role"]
        },
        "queryParamsRequired": false,
        "responseType": "OrganizationInvitationCreateTargetSchema",
        "name": "create",
        "rawName": "rawCreate"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "update",
        "urlTemplate": "/organization-invitations/${organizationInvitationId}",
        "method": "PUT",
        "comment": "Update an invitation",
        "urlPlaceholders": [
          {
            "variableName": "organizationInvitationId",
            "isEntityId": true,
            "relType": "OrganizationInvitationData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "organizationInvitationId",
          "isEntityId": true,
          "relType": "OrganizationInvitationData"
        },
        "requestBodyType": "OrganizationInvitationUpdateSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "organization_invitation",
          "idRequired": true,
          "attributes": [],
          "relationships": ["role"]
        },
        "queryParamsRequired": false,
        "responseType": "OrganizationInvitationUpdateTargetSchema",
        "name": "update",
        "rawName": "rawUpdate"
      },
      {
        "returnsCollection": true,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "instances",
        "urlTemplate": "/organization-invitations",
        "method": "GET",
        "comment": "List all invitations",
        "urlPlaceholders": [],
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "OrganizationInvitationInstancesTargetSchema",
        "name": "list",
        "rawName": "rawList"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "self",
        "urlTemplate": "/organization-invitations/${organizationInvitationId}",
        "method": "GET",
        "comment": "Retrieve an invitation",
        "urlPlaceholders": [
          {
            "variableName": "organizationInvitationId",
            "isEntityId": true,
            "relType": "OrganizationInvitationData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "organizationInvitationId",
          "isEntityId": true,
          "relType": "OrganizationInvitationData"
        },
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "OrganizationInvitationSelfTargetSchema",
        "name": "find",
        "rawName": "rawFind"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "destroy",
        "urlTemplate": "/organization-invitations/${organizationInvitationId}",
        "method": "DELETE",
        "comment": "Delete an invitation",
        "urlPlaceholders": [
          {
            "variableName": "organizationInvitationId",
            "isEntityId": true,
            "relType": "OrganizationInvitationData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "organizationInvitationId",
          "isEntityId": true,
          "relType": "OrganizationInvitationData"
        },
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "OrganizationInvitationDestroyTargetSchema",
        "name": "destroy",
        "rawName": "rawDestroy"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "resend",
        "urlTemplate": "/organization-invitations/${organizationInvitationId}/resend",
        "method": "POST",
        "comment": "Resend an invitation",
        "urlPlaceholders": [
          {
            "variableName": "organizationInvitationId",
            "isEntityId": true,
            "relType": "OrganizationInvitationData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "organizationInvitationId",
          "isEntityId": true,
          "relType": "OrganizationInvitationData"
        },
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "name": "resend",
        "rawName": "rawResend"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "redeem",
        "urlTemplate": "/organization-invitations/${organizationInvitationId}/redeem",
        "method": "PUT",
        "comment": "Redeem token",
        "urlPlaceholders": [
          {
            "variableName": "organizationInvitationId",
            "isEntityId": true,
            "relType": "OrganizationInvitationData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "organizationInvitationId",
          "isEntityId": true,
          "relType": "OrganizationInvitationData"
        },
        "optionalRequestBody": false,
        "queryParamsType": "OrganizationInvitationRedeemHrefSchema",
        "queryParamsRequired": false,
        "responseType": "OrganizationInvitationRedeemTargetSchema",
        "name": "redeem",
        "rawName": "rawRedeem"
      }
    ],
    "namespace": "organizationInvitations",
    "resourceClassName": "OrganizationInvitation"
  },
  {
    "jsonApiType": "organization_membership",
    "endpoints": [
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "update",
        "urlTemplate": "/organization-memberships/${organizationMembershipId}",
        "method": "PUT",
        "comment": "Update an organization membership",
        "urlPlaceholders": [
          {
            "variableName": "organizationMembershipId",
            "isEntityId": true,
            "relType": "OrganizationMembershipData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "organizationMembershipId",
          "isEntityId": true,
          "relType": "OrganizationMembershipData"
        },
        "requestBodyType": "OrganizationMembershipUpdateSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "organization_membership",
          "idRequired": true,
          "attributes": [],
          "relationships": ["role"]
        },
        "queryParamsRequired": false,
        "responseType": "OrganizationMembershipUpdateTargetSchema",
        "name": "update",
        "rawName": "rawUpdate"
      },
      {
        "returnsCollection": true,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "instances",
        "urlTemplate": "/organization-memberships",
        "method": "GET",
        "comment": "List all organization memberships",
        "urlPlaceholders": [],
        "optionalRequestBody": false,
        "queryParamsType": "OrganizationMembershipInstancesHrefSchema",
        "queryParamsRequired": false,
        "responseType": "OrganizationMembershipInstancesTargetSchema",
        "name": "list",
        "rawName": "rawList"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "self",
        "urlTemplate": "/organization-memberships/${organizationMembershipId}",
        "method": "GET",
        "comment": "Retrieve an organization membership",
        "urlPlaceholders": [
          {
            "variableName": "organizationMembershipId",
            "isEntityId": true,
            "relType": "OrganizationMembershipData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "organizationMembershipId",
          "isEntityId": true,
          "relType": "OrganizationMembershipData"
        },
        "optionalRequestBody": false,
        "queryParamsType": "OrganizationMembershipSelfHrefSchema",
        "queryParamsRequired": false,
        "responseType": "OrganizationMembershipSelfTargetSchema",
        "name": "find",
        "rawName": "rawFind"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "me",
        "urlTemplate": "/organization-memberships/me",
        "method": "GET",
        "comment": "Retrieve currently signed-in account organization membership",
        "urlPlaceholders": [],
        "optionalRequestBody": false,
        "queryParamsType": "OrganizationMembershipMeHrefSchema",
        "queryParamsRequired": false,
        "responseType": "OrganizationMembershipMeTargetSchema",
        "name": "findMe",
        "rawName": "rawFindMe"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "destroy",
        "urlTemplate": "/organization-memberships/${organizationMembershipId}",
        "method": "DELETE",
        "comment": "Delete an organization membership",
        "urlPlaceholders": [
          {
            "variableName": "organizationMembershipId",
            "isEntityId": true,
            "relType": "OrganizationMembershipData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "organizationMembershipId",
          "isEntityId": true,
          "relType": "OrganizationMembershipData"
        },
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "OrganizationMembershipDestroyTargetSchema",
        "name": "destroy",
        "rawName": "rawDestroy"
      }
    ],
    "namespace": "organizationMemberships",
    "resourceClassName": "OrganizationMembership"
  },
  {
    "jsonApiType": "organization_mandate_request",
    "endpoints": [
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "create",
        "urlTemplate": "/organization-mandate-requests",
        "method": "POST",
        "comment": "Request a new mandate",
        "urlPlaceholders": [],
        "requestBodyType": "OrganizationMandateRequestCreateSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "organization_mandate_request",
          "attributes": [],
          "relationships": ["approver_organization"]
        },
        "queryParamsType": "OrganizationMandateRequestCreateHrefSchema",
        "queryParamsRequired": false,
        "responseType": "OrganizationMandateRequestCreateTargetSchema",
        "name": "create",
        "rawName": "rawCreate"
      },
      {
        "returnsCollection": true,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "pending_instances",
        "urlTemplate": "/organization-mandate-requests/pending",
        "method": "GET",
        "comment": "List all pending mandate requests",
        "urlPlaceholders": [],
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "OrganizationMandateRequestPendingInstancesTargetSchema",
        "name": "pendingList",
        "rawName": "rawPendingList"
      },
      {
        "returnsCollection": true,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "requested_instances",
        "urlTemplate": "/organization-mandate-requests/requested",
        "method": "GET",
        "comment": "List all requested mandates",
        "urlPlaceholders": [],
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "OrganizationMandateRequestRequestedInstancesTargetSchema",
        "name": "requestedList",
        "rawName": "rawRequestedList"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "destroy",
        "urlTemplate": "/organization-mandate-requests/${organizationMandateRequestId}",
        "method": "DELETE",
        "comment": "Delete a mandate request",
        "urlPlaceholders": [
          {
            "variableName": "organizationMandateRequestId",
            "isEntityId": true,
            "relType": "OrganizationMandateRequestData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "organizationMandateRequestId",
          "isEntityId": true,
          "relType": "OrganizationMandateRequestData"
        },
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "OrganizationMandateRequestDestroyTargetSchema",
        "name": "destroy",
        "rawName": "rawDestroy"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "approve",
        "urlTemplate": "/organization-mandate-requests/${organizationMandateRequestId}/approve",
        "method": "PUT",
        "comment": "Approve a mandate request",
        "urlPlaceholders": [
          {
            "variableName": "organizationMandateRequestId",
            "isEntityId": true,
            "relType": "OrganizationMandateRequestData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "organizationMandateRequestId",
          "isEntityId": true,
          "relType": "OrganizationMandateRequestData"
        },
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "name": "approve",
        "rawName": "rawApprove"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "reject",
        "urlTemplate": "/organization-mandate-requests/${organizationMandateRequestId}/reject",
        "method": "PUT",
        "comment": "Reject a mandate request",
        "urlPlaceholders": [
          {
            "variableName": "organizationMandateRequestId",
            "isEntityId": true,
            "relType": "OrganizationMandateRequestData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "organizationMandateRequestId",
          "isEntityId": true,
          "relType": "OrganizationMandateRequestData"
        },
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "name": "reject",
        "rawName": "rawReject"
      }
    ],
    "namespace": "organizationMandateRequests",
    "resourceClassName": "OrganizationMandateRequest"
  },
  {
    "jsonApiType": "organization_mandate",
    "endpoints": [
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "update",
        "urlTemplate": "/organization-mandates/${organizationMandateId}",
        "method": "PUT",
        "comment": "Update an organization mandate",
        "urlPlaceholders": [
          {
            "variableName": "organizationMandateId",
            "isEntityId": true,
            "relType": "OrganizationMandateData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "organizationMandateId",
          "isEntityId": true,
          "relType": "OrganizationMandateData"
        },
        "requestBodyType": "OrganizationMandateUpdateSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "organization_mandate",
          "idRequired": true,
          "attributes": [],
          "relationships": ["additional_enabled_plans"]
        },
        "queryParamsRequired": false,
        "responseType": "OrganizationMandateUpdateTargetSchema",
        "name": "update",
        "rawName": "rawUpdate"
      },
      {
        "returnsCollection": true,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "approved_instances",
        "urlTemplate": "/organization-mandates/approved",
        "method": "GET",
        "comment": "List all mandates that the organization has approved",
        "urlPlaceholders": [],
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "OrganizationMandateApprovedInstancesTargetSchema",
        "name": "approvedList",
        "rawName": "rawApprovedList"
      },
      {
        "returnsCollection": true,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "given_instances",
        "urlTemplate": "/organization-mandates/given",
        "method": "GET",
        "comment": "List all mandates that the organization has been given",
        "urlPlaceholders": [],
        "optionalRequestBody": false,
        "queryParamsType": "OrganizationMandateGivenInstancesHrefSchema",
        "queryParamsRequired": false,
        "responseType": "OrganizationMandateGivenInstancesTargetSchema",
        "name": "givenList",
        "rawName": "rawGivenList"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "destroy",
        "urlTemplate": "/organization-mandates/${organizationMandateId}",
        "method": "DELETE",
        "comment": "Cancel an organization mandate",
        "urlPlaceholders": [
          {
            "variableName": "organizationMandateId",
            "isEntityId": true,
            "relType": "OrganizationMandateData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "organizationMandateId",
          "isEntityId": true,
          "relType": "OrganizationMandateData"
        },
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "OrganizationMandateDestroyTargetSchema",
        "name": "destroy",
        "rawName": "rawDestroy"
      }
    ],
    "namespace": "organizationMandates",
    "resourceClassName": "OrganizationMandate"
  },
  {
    "jsonApiType": "tfa_deactivate_request",
    "endpoints": [
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "create",
        "urlTemplate": "/tfa-deactivate-requests",
        "method": "POST",
        "comment": "Request the belonging organization to deactivate two-factor authentication",
        "urlPlaceholders": [],
        "requestBodyType": "TfaDeactivateRequestCreateSchema",
        "optionalRequestBody": false,
        "requestStructure": {
          "type": "tfa_deactivate_request",
          "attributes": ["email", "password"],
          "relationships": []
        },
        "queryParamsRequired": false,
        "responseType": "TfaDeactivateRequestCreateTargetSchema",
        "deprecated": "This API call is to be considered private and might change without notice",
        "name": "create",
        "rawName": "rawCreate"
      },
      {
        "returnsCollection": true,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "instances",
        "urlTemplate": "/tfa-deactivate-requests",
        "method": "GET",
        "comment": "List all two-factor authentication deactivate requests",
        "urlPlaceholders": [],
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "responseType": "TfaDeactivateRequestInstancesTargetSchema",
        "deprecated": "This API call is to be considered private and might change without notice",
        "name": "list",
        "rawName": "rawList"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "approve",
        "urlTemplate": "/tfa-deactivate-requests/${tfaDeactivateRequestId}/approve",
        "method": "PUT",
        "comment": "Approve a two-factor authentication deactivate request",
        "urlPlaceholders": [
          {
            "variableName": "tfaDeactivateRequestId",
            "isEntityId": true,
            "relType": "TfaDeactivateRequestData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "tfaDeactivateRequestId",
          "isEntityId": true,
          "relType": "TfaDeactivateRequestData"
        },
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "deprecated": "This API call is to be considered private and might change without notice",
        "name": "approve",
        "rawName": "rawApprove"
      },
      {
        "returnsCollection": false,
        "returnsItem": false,
        "requestBodyRequiresItem": false,
        "offersNestedItemsOptionInQueryParams": false,
        "rel": "reject",
        "urlTemplate": "/tfa-deactivate-requests/${tfaDeactivateRequestId}/reject",
        "method": "PUT",
        "comment": "Reject a two-factor authentication deactivate request",
        "urlPlaceholders": [
          {
            "variableName": "tfaDeactivateRequestId",
            "isEntityId": true,
            "relType": "TfaDeactivateRequestData"
          }
        ],
        "entityIdPlaceholder": {
          "variableName": "tfaDeactivateRequestId",
          "isEntityId": true,
          "relType": "TfaDeactivateRequestData"
        },
        "optionalRequestBody": false,
        "queryParamsRequired": false,
        "deprecated": "This API call is to be considered private and might change without notice",
        "name": "reject",
        "rawName": "rawReject"
      }
    ],
    "namespace": "tfaDeactivateRequests",
    "resourceClassName": "TfaDeactivateRequest"
  }
]
